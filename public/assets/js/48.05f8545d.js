(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{568:function(t,a,s){"use strict";s.r(a);var r=s(4),_=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1-什么是进程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是进程"}},[t._v("#")]),t._v(" 1 什么是进程")]),t._v(" "),s("p",[t._v("进程拥有自己独立的栈和堆，既不共享栈，亦不共享堆，进程由操作系统调度。")]),t._v(" "),s("h2",{attrs:{id:"_2-什么是线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么是线程"}},[t._v("#")]),t._v(" 2 什么是线程")]),t._v(" "),s("p",[t._v("线程拥有自己独立的栈和共享的堆，共享堆，不共享栈，线程亦由操作系统调度（标准线程是这样的）。")]),t._v(" "),s("h2",{attrs:{id:"_3-什么是协程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-什么是协程"}},[t._v("#")]),t._v(" 3 什么是协程")]),t._v(" "),s("p",[t._v("协程和线程一样共享堆，不共享栈，协程由程序员在协程的代码里显示调度。")]),t._v(" "),s("p",[t._v("一个应用程序一般对应一个进程，一个进程一般有一个主线程，还有若干个辅助线程，线程之间是平行运行的，在线程里面可以开启协程,让程序在特定的时间内运行。")]),t._v(" "),s("h2",{attrs:{id:"协程和线程的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#协程和线程的区别"}},[t._v("#")]),t._v(" 协程和线程的区别")]),t._v(" "),s("p",[t._v("协程避免了无意义的调度，由此可以提高性能，但也因此，程序员必须自己承担调度的责任，同时协程也失去了标准线程使用多CPU的能力。")])])}),[],!1,null,null,null);a.default=_.exports}}]);