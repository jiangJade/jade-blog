(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{587:function(t,a,r){"use strict";r.r(a);var s=r(4),_=Object(s.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"_1-前端发展的几个层次"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-前端发展的几个层次"}},[t._v("#")]),t._v(" 1 前端发展的几个层次")]),t._v(" "),r("p",[t._v("表现层，应用实现层，业务架构层，基础设施层")]),t._v(" "),r("h2",{attrs:{id:"_2-如何解决焦虑和卷"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-如何解决焦虑和卷"}},[t._v("#")]),t._v(" 2 如何解决焦虑和卷")]),t._v(" "),r("p",[t._v("前端需要写业务代码和学习很多新东西。要跳出单纯做业务的状态，就得去寻找在当前的业务场景下，是否有更有意义、更有价值的这些问题去解决，或者说有没有什么机会可以让团队的效率更高，或者说业务上有什么痛点可以用我的技术去解决。前端在整个产品里面扮演着一个怎样的角色，有没有什么机会在前端这个环节给整个链路去创造一些价值。")]),t._v(" "),r("p",[t._v("如果能找到这样的东西，如何跟我擅长的技术去结合起来，或者说我觉得这个东西很值得解决，我通过怎样的学习可以让自己能够去解决这个问题。找到更高、更明确的目标，这样在学习的时候会更有指向性。还有另一种选择，如果你发现你所在的岗位完全没有任何可以用前端去创造改变的可能性，寻找新的机会。")]),t._v(" "),r("h2",{attrs:{id:"_3-前端新趋势"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-前端新趋势"}},[t._v("#")]),t._v(" 3 前端新趋势")]),t._v(" "),r("p",[t._v("一个比较重要的趋势就是工具链，利用原生语言写的工具链来提升开发的体验效能。另外一个大趋势是在整体的生产力提升挖掘。过去几年，大家还主要围绕着前后端分离这样的模式。慢慢的我们发现，如果想要进一步挖掘生产力提升，还是得往全栈这个方向走。")]),t._v(" "),r("p",[t._v("全栈的逆袭，还有原生语言所写的 JavaScript 工具。")])])}),[],!1,null,null,null);a.default=_.exports}}]);