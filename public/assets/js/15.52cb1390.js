(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{495:function(t,a,s){t.exports=s.p+"assets/img/bigOnotation.cc37ff45.png"},496:function(t,a,s){t.exports=s.p+"assets/img/trie.976bc392.png"},562:function(t,a,s){"use strict";s.r(a);var r=s(4),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("时间复杂度\n"),r("img",{attrs:{src:s(495),alt:"call"}})]),t._v(" "),r("h2",{attrs:{id:"_1-链表就是特殊化的树-tree"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-链表就是特殊化的树-tree"}},[t._v("#")]),t._v(" 1 链表就是特殊化的树(Tree)")]),t._v(" "),r("p",[t._v("链表查找数据时间复杂度o(n)")]),t._v(" "),r("h2",{attrs:{id:"_2-树就是特殊化的图（graph）"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-树就是特殊化的图（graph）"}},[t._v("#")]),t._v(" 2 树就是特殊化的图（Graph）")]),t._v(" "),r("p",[t._v("树有一个根节点")]),t._v(" "),r("h2",{attrs:{id:"_3-二叉搜索树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-二叉搜索树"}},[t._v("#")]),t._v(" 3 二叉搜索树")]),t._v(" "),r("p",[t._v("也称有序二叉树，排序二叉树，是指一颗空树或者具有以下列性质的二叉树\n1 左子树上所有结点的值均小于它的根节点的值；\n2 右子树上所有结点的值均大于它的根节点的值；\n3 递归，左、右子树也分别为二叉树")]),t._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",[t._v("如何判断一颗树是否为二叉搜索树\n用递归判断左子树的最大值是否小于根节点")]),t._v(" "),r("p",[t._v("用递归判断右子树的最小值是否大于根节点")])]),t._v(" "),r("h2",{attrs:{id:"_4-trie树，即字典树，又称单词查找树或键树，是一种树形结构。"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-trie树，即字典树，又称单词查找树或键树，是一种树形结构。"}},[t._v("#")]),t._v(" 4 Trie树，即字典树，又称单词查找树或键树，是一种树形结构。")]),t._v(" "),r("h3",{attrs:{id:"_4-1-基本性质"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-基本性质"}},[t._v("#")]),t._v(" 4.1 基本性质")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("1. 根节点不包含字符，除根节点外每一个节点都只包含一个字符。\n2. 从根节点到某一个节点，路径上经过的字符连接起来，为该节点对应的字符串。\n3. 每一个节点的所有子节点包含的字符都不相同。\n")])])]),r("p",[r("img",{attrs:{src:s(496),alt:"call"}})])])}),[],!1,null,null,null);a.default=e.exports}}]);