(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{580:function(n,s,e){"use strict";e.r(s);var a=e(4),l=Object(a.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("p",[n._v("上次我们介绍了单一节点的Diff，现在考虑我们有一个FunctionComponent：")]),n._v(" "),e("h2",{attrs:{id:"list函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list函数"}},[n._v("#")]),n._v(" List函数")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('function List () {\n  return (\n    <ul>\n      <li key="0">0</li>\n      <li key="1">1</li>\n      <li key="2">2</li>\n      <li key="3">3</li>\n    </ul>\n  )\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br")])]),e("h2",{attrs:{id:"jsx对象的children"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsx对象的children"}},[n._v("#")]),n._v(" JSX对象的children")]),n._v(" "),e("p",[n._v("他的返回值JSX对象的children属性不是单一节点，而是包含四个对象的数组")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('{\n  $$typeof: Symbol(react.element),\n  key: null,\n  props: {\n    children: [\n      {$$typeof: Symbol(react.element), type: "li", key: "0", ref: null, props: {…}, …}\n      {$$typeof: Symbol(react.element), type: "li", key: "1", ref: null, props: {…}, …}\n      {$$typeof: Symbol(react.element), type: "li", key: "2", ref: null, props: {…}, …}\n      {$$typeof: Symbol(react.element), type: "li", key: "3", ref: null, props: {…}, …}\n    ]\n  },\n  ref: null,\n  type: "ul"\n}\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br")])]),e("p",[n._v("这种情况下，reconcileChildFibers的newChild参数类型为Array，在reconcileChildFibers函数内部对应如下情况：")]),n._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",[e("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactChildFiber.new.js#L1352",target:"_blank",rel:"noopener noreferrer"}},[n._v("在这里可以查看对应源码"),e("OutboundLink")],1)])]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("if (isArray(newChild)) {\n    // 调用 reconcileChildrenArray 处理\n    // ...省略\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br")])]),e("h2",{attrs:{id:"多个节点的diff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#多个节点的diff"}},[n._v("#")]),n._v(" 多个节点的Diff")]),n._v(" "),e("p",[n._v("这一节我们来看看，如何处理同级多个节点的Diff。\n首先归纳下我们需要处理的情况：")]),n._v(" "),e("p",[n._v("我们以之前代表更新前的JSX对象，之后代表更新后的JSX对象")]),n._v(" "),e("h2",{attrs:{id:"情况1：节点更新"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#情况1：节点更新"}},[n._v("#")]),n._v(" 情况1：节点更新")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('// 之前\n<ul>\n  <li key="0" className="before">0<li>\n  <li key="1">1<li>\n</ul>\n\n// 之后 情况1 —— 节点属性变化\n<ul>\n  <li key="0" className="after">0<li>\n  <li key="1">1<li>\n</ul>\n\n// 之后 情况2 —— 节点类型更新\n<ul>\n  <div key="0">0<li>\n  <li key="1">1<li>\n</ul>\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br")])]),e("h2",{attrs:{id:"情况2：节点新增或减少"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#情况2：节点新增或减少"}},[n._v("#")]),n._v(" 情况2：节点新增或减少")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('// 之前\n<ul>\n  <li key="0">0<li>\n  <li key="1">1<li>\n</ul>\n\n// 之后 情况1 —— 新增节点\n<ul>\n  <li key="0">0<li>\n  <li key="1">1<li>\n  <li key="2">2<li>\n</ul>\n\n// 之后 情况2 —— 删除节点\n<ul>\n  <li key="1">1<li>\n</ul>\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br")])]),e("h2",{attrs:{id:"情况3：节点位置变化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#情况3：节点位置变化"}},[n._v("#")]),n._v(" 情况3：节点位置变化")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('// 之前\n<ul>\n  <li key="0">0<li>\n  <li key="1">1<li>\n</ul>\n\n// 之后\n<ul>\n  <li key="1">1<li>\n  <li key="0">0<li>\n</ul>\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br")])]),e("div",{staticClass:"custom-block tip"},[e("p",[n._v("同级多个节点的Diff，一定属于以上三种情况中的一种或多种。")])]),n._v(" "),e("h2",{attrs:{id:"diff的思路"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#diff的思路"}},[n._v("#")]),n._v(" Diff的思路")]),n._v(" "),e("p",[n._v("该如何设计算法呢？如果让我设计一个Diff算法，我首先想到的方案是：")]),n._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",[n._v("判断当前节点的更新属于哪种情况\n如果是新增，执行新增逻辑\n如果是删除，执行删除逻辑\n如果是更新，执行更新逻辑")])]),n._v(" "),e("p",[n._v("按这个方案，其实有个隐含的前提——不同操作的优先级是相同的")]),n._v(" "),e("p",[n._v("但是React团队发现，在日常开发中，相较于新增和删除，更新组件发生的频率更高。所以Diff会优先判断当前节点是否属于更新。")]),n._v(" "),e("div",{staticClass:"custom-block tip"},[e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v("注意\n\n在我们做数组相关的算法题时，经常使用双指针从数组头和尾同时遍历以提高效率，但是这里却不行。\n\n虽然本次更新的JSX对象 newChildren为数组形式，\n但是和newChildren中每个组件进行比较的是current fiber，\n同级的Fiber节点是由sibling指针链接形成的单链表，即不支持双指针遍历。\n\n即 newChildren[0]与fiber比较，newChildren[1]与fiber.sibling比较。\n\n所以无法使用双指针优化。\n")])])])]),n._v(" "),e("p",[n._v("基于以上原因，Diff算法的整体逻辑会经历两轮遍历：")]),n._v(" "),e("p",[n._v("第一轮遍历：处理更新的节点。")]),n._v(" "),e("p",[n._v("第二轮遍历：处理剩下的不属于更新的节点。")]),n._v(" "),e("h2",{attrs:{id:"第一轮遍历"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一轮遍历"}},[n._v("#")]),n._v(" 第一轮遍历")]),n._v(" "),e("p",[n._v("第一轮遍历步骤如下：")]),n._v(" "),e("ol",[e("li",[e("p",[n._v("let i = 0，遍历newChildren，将newChildren[i]与oldFiber比较，判断DOM节点是否可复用。")])]),n._v(" "),e("li",[e("p",[n._v("如果可复用，i++，继续比较newChildren[i]与oldFiber.sibling，可以复用则继续遍历。")])]),n._v(" "),e("li",[e("p",[n._v("如果不可复用，分两种情况：")])])]),n._v(" "),e("p",[n._v(".key不同导致不可复用，立即跳出整个遍历，第一轮遍历结束。")]),n._v(" "),e("p",[n._v(".key相同type不同导致不可复用，会将oldFiber标记为DELETION，并继续遍历")]),n._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[n._v("如果newChildren遍历完（即i === newChildren.length - 1）或者oldFiber遍历完（即oldFiber.sibling === null），跳出遍历，第一轮遍历结束。")])]),n._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",[n._v("你可以从这里看到这轮"),e("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactChildFiber.new.js#L818",target:"_blank",rel:"noopener noreferrer"}},[n._v("遍历的源码"),e("OutboundLink")],1)])]),n._v(" "),e("p",[n._v("当遍历结束后，会有两种结果：")]),n._v(" "),e("h2",{attrs:{id:"步骤3跳出的遍历"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤3跳出的遍历"}},[n._v("#")]),n._v(" 步骤3跳出的遍历")]),n._v(" "),e("p",[n._v("此时newChildren没有遍历完，oldFiber也没有遍历完。")]),n._v(" "),e("p",[n._v("举个例子，考虑如下代码：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('// 之前\n<li key="0">0</li>\n<li key="1">1</li>\n<li key="2">2</li>\n            \n// 之后\n<li key="0">0</li>\n<li key="2">1</li>\n<li key="1">2</li>\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br")])]),e("p",[n._v("第一个节点可复用，遍历到key === 2的节点发现key改变，不可复用，跳出遍历，等待第二轮遍历处理。")]),n._v(" "),e("p",[n._v("此时oldFiber剩下key === 1、key === 2未遍历，newChildren剩下key === 2、key === 1未遍历。")]),n._v(" "),e("h2",{attrs:{id:"步骤4跳出的遍历"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#步骤4跳出的遍历"}},[n._v("#")]),n._v(" 步骤4跳出的遍历")]),n._v(" "),e("p",[n._v("可能newChildren遍历完，或oldFiber遍历完，或他们同时遍历完。")]),n._v(" "),e("p",[n._v("举个例子，考虑如下代码：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('// 之前\n<li key="0" className="a">0</li>\n<li key="1" className="b">1</li>\n            \n// 之后 情况1 —— newChildren与oldFiber都遍历完\n<li key="0" className="aa">0</li>\n<li key="1" className="bb">1</li>\n            \n// 之后 情况2 —— newChildren没遍历完，oldFiber遍历完\n// newChildren剩下 key==="2" 未遍历\n<li key="0" className="aa">0</li>\n<li key="1" className="bb">1</li>\n<li key="2" className="cc">2</li>\n            \n// 之后 情况3 —— newChildren遍历完，oldFiber没遍历完\n// oldFiber剩下 key==="1" 未遍历\n<li key="0" className="aa">0</li>\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br")])]),e("p",[n._v("带着第一轮遍历的结果，我们开始第二轮遍历。")]),n._v(" "),e("h2",{attrs:{id:"第二轮遍历"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二轮遍历"}},[n._v("#")]),n._v(" 第二轮遍历")]),n._v(" "),e("p",[n._v("对于第一轮遍历的结果，我们分别讨论：")]),n._v(" "),e("h2",{attrs:{id:"newchildren与oldfiber同时遍历完"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#newchildren与oldfiber同时遍历完"}},[n._v("#")]),n._v(" newChildren与oldFiber同时遍历完")]),n._v(" "),e("p",[n._v("那就是最理想的情况：只需在第一轮遍历进行组件"),e("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactChildFiber.new.js#L825",target:"_blank",rel:"noopener noreferrer"}},[n._v("更新"),e("OutboundLink")],1),n._v("。此时Diff结束。")]),n._v(" "),e("h2",{attrs:{id:"newchildren没遍历完，oldfiber遍历完-新节点插入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#newchildren没遍历完，oldfiber遍历完-新节点插入"}},[n._v("#")]),n._v(" newChildren没遍历完，oldFiber遍历完(新节点插入)")]),n._v(" "),e("p",[n._v("已有的DOM节点都复用了，这时还有新加入的节点，意味着本次更新有新节点插入，我们只需要遍历剩下的newChildren为生成的workInProgress fiber依次标记Placement。")]),n._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",[e("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactChildFiber.new.js#L869",target:"_blank",rel:"noopener noreferrer"}},[n._v("插入节点的diff"),e("OutboundLink")],1),n._v("源码")])]),n._v(" "),e("h2",{attrs:{id:"newchildren遍历完，oldfiber没遍历完（有节点被删除）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#newchildren遍历完，oldfiber没遍历完（有节点被删除）"}},[n._v("#")]),n._v(" newChildren遍历完，oldFiber没遍历完（有节点被删除）")]),n._v(" "),e("p",[n._v("意味着本次更新比之前的节点数量少，有节点被删除了。所以需要遍历剩下的oldFiber，依次标记Deletion。")]),n._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",[n._v("你可以在这里看到"),e("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactChildFiber.new.js#L863",target:"_blank",rel:"noopener noreferrer"}},[n._v("删除节点操作源码"),e("OutboundLink")],1)])]),n._v(" "),e("h2",{attrs:{id:"newchildren与oldfiber都没遍历完"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#newchildren与oldfiber都没遍历完"}},[n._v("#")]),n._v(" newChildren与oldFiber都没遍历完")]),n._v(" "),e("p",[n._v("这意味着有节点在这次更新中改变了位置。")]),n._v(" "),e("p",[n._v("这是Diff算法最精髓也是最难懂的部分。我们接下来会重点讲解。")]),n._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",[n._v("在这里可以看到"),e("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactChildFiber.new.js#L893",target:"_blank",rel:"noopener noreferrer"}},[n._v("对应源码"),e("OutboundLink")],1)])]),n._v(" "),e("h2",{attrs:{id:"处理移动的节点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#处理移动的节点"}},[n._v("#")]),n._v(" 处理移动的节点")]),n._v(" "),e("p",[n._v("由于有节点改变了位置，所以不能再用位置索引i对比前后的节点，那么如何才能将同一个节点在两次更新中对应上呢？")]),n._v(" "),e("p",[n._v("我们需要使用key。")]),n._v(" "),e("p",[n._v("为了快速的找到key对应的oldFiber，我们将所有还未处理的oldFiber存入以key为key，oldFiber为value的Map中。")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br")])]),e("div",{staticClass:"custom-block tip"},[e("p",[n._v("你可以在"),e("a",{attrs:{href:"https://github.com/facebook/react/blob/1fb18e22ae66fdb1dc127347e169e73948778e5a/packages/react-reconciler/src/ReactChildFiber.new.js#L890",target:"_blank",rel:"noopener noreferrer"}},[n._v("这里"),e("OutboundLink")],1),n._v("看到这段源码逻辑")])]),n._v(" "),e("p",[n._v("接下来遍历剩余的newChildren，通过newChildren[i].key就能在existingChildren中找到key相同的oldFiber。")]),n._v(" "),e("h2",{attrs:{id:"标记节点是否移动"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#标记节点是否移动"}},[n._v("#")]),n._v(" 标记节点是否移动")]),n._v(" "),e("p",[n._v("既然我们的目标是寻找移动的节点，那么我们需要明确：节点是否移动是以什么为参照物？")]),n._v(" "),e("p",[n._v("我们的参照物是：最后一个可复用的节点在oldFiber中的位置索引（用变量lastPlacedIndex表示）。")]),n._v(" "),e("p",[n._v("由于本次更新中节点是按newChildren的顺序排列。在遍历newChildren过程中，每个遍历到的可复用节点一定是当前遍历到的所有可复用节点中最靠右的那个，即一定在lastPlacedIndex对应的可复用的节点在本次更新中位置的后面。")]),n._v(" "),e("p",[n._v("那么我们只需要比较遍历到的可复用节点在上次更新时是否也在lastPlacedIndex对应的oldFiber后面，就能知道两次更新中这两个节点的相对位置改变没有。")]),n._v(" "),e("p",[n._v("我们用变量oldIndex表示遍历到的可复用节点在oldFiber中的位置索引。如果oldIndex < lastPlacedIndex，代表本次更新该节点需要向右移动。")]),n._v(" "),e("p",[n._v("lastPlacedIndex初始为0，每遍历一个可复用的节点，如果oldFiber >= lastPlacedIndex，则lastPlacedIndex = oldFiber。")]),n._v(" "),e("p",[n._v("单纯文字表达比较晦涩，这里我们提供两个Demo，你可以对照着理解。")]),n._v(" "),e("h2",{attrs:{id:"demo1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#demo1"}},[n._v("#")]),n._v(" Demo1")]),n._v(" "),e("p",[n._v("在Demo中我们简化下书写，每个字母代表一个节点，字母的值代表节点的key")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("    // 之前\n    abcd\n\n    // 之后\n    acdb\n\n    ===第一轮遍历开始===\n    a（之后）vs a（之前）  \n    key不变，可复用\n    此时 a 对应的oldFiber（之前的a）在之前的数组（abcd）中索引为0\n    所以 lastPlacedIndex = 0;\n\n    继续第一轮遍历...\n\n    c（之后）vs b（之前）  \n    key改变，不能复用，跳出第一轮遍历\n    此时 lastPlacedIndex === 0;\n    ===第一轮遍历结束===\n\n    ===第二轮遍历开始===\n    newChildren === cdb，没用完，不需要执行删除旧节点\n    oldFiber === bcd，没用完，不需要执行插入新节点\n\n    将剩余oldFiber（bcd）保存为map\n\n    // 当前oldFiber：bcd\n    // 当前newChildren：cdb\n\n    继续遍历剩余newChildren\n\n    key === c 在 oldFiber中存在\n    const oldIndex = c（之前）.index;\n    此时 oldIndex === 2;  // 之前节点为 abcd，所以c.index === 2\n    比较 oldIndex 与 lastPlacedIndex;\n\n    如果 oldIndex >= lastPlacedIndex 代表该可复用节点不需要移动\n    并将 lastPlacedIndex = oldIndex;\n    如果 oldIndex < lastplacedIndex 该可复用节点之前插入的位置索引小于这次更新需要插入的位置索引，代表该节点需要向右移动\n\n    在例子中，oldIndex 2 > lastPlacedIndex 0，\n    则 lastPlacedIndex = 2;\n    c节点位置不变\n\n    继续遍历剩余newChildren\n\n    // 当前oldFiber：bd\n    // 当前newChildren：db\n\n    key === d 在 oldFiber中存在\n    const oldIndex = d（之前）.index;\n    oldIndex 3 > lastPlacedIndex 2 // 之前节点为 abcd，所以d.index === 3\n    则 lastPlacedIndex = 3;\n    d节点位置不变\n\n    继续遍历剩余newChildren\n\n    // 当前oldFiber：b\n    // 当前newChildren：b\n\n    key === b 在 oldFiber中存在\n    const oldIndex = b（之前）.index;\n    oldIndex 1 < lastPlacedIndex 3 // 之前节点为 abcd，所以b.index === 1\n    则 b节点需要向右移动\n    ===第二轮遍历结束===\n\n    最终acd 3个节点都没有移动，b节点被标记为移动\n\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br"),e("span",{staticClass:"line-number"},[n._v("51")]),e("br"),e("span",{staticClass:"line-number"},[n._v("52")]),e("br"),e("span",{staticClass:"line-number"},[n._v("53")]),e("br"),e("span",{staticClass:"line-number"},[n._v("54")]),e("br"),e("span",{staticClass:"line-number"},[n._v("55")]),e("br"),e("span",{staticClass:"line-number"},[n._v("56")]),e("br"),e("span",{staticClass:"line-number"},[n._v("57")]),e("br"),e("span",{staticClass:"line-number"},[n._v("58")]),e("br"),e("span",{staticClass:"line-number"},[n._v("59")]),e("br"),e("span",{staticClass:"line-number"},[n._v("60")]),e("br"),e("span",{staticClass:"line-number"},[n._v("61")]),e("br"),e("span",{staticClass:"line-number"},[n._v("62")]),e("br"),e("span",{staticClass:"line-number"},[n._v("63")]),e("br"),e("span",{staticClass:"line-number"},[n._v("64")]),e("br"),e("span",{staticClass:"line-number"},[n._v("65")]),e("br"),e("span",{staticClass:"line-number"},[n._v("66")]),e("br"),e("span",{staticClass:"line-number"},[n._v("67")]),e("br")])]),e("h2",{attrs:{id:"demo2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#demo2"}},[n._v("#")]),n._v(" Demo2")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("    // 之前\n    abcd\n\n    // 之后\n    dabc\n\n    ===第一轮遍历开始===\n    d（之后）vs a（之前）  \n    key改变，不能复用，跳出遍历\n    ===第一轮遍历结束===\n\n    ===第二轮遍历开始===\n    newChildren === dabc，没用完，不需要执行删除旧节点\n    oldFiber === abcd，没用完，不需要执行插入新节点\n\n    将剩余oldFiber（abcd）保存为map\n\n    继续遍历剩余newChildren\n\n    // 当前oldFiber：abcd\n    // 当前newChildren dabc\n\n    key === d 在 oldFiber中存在\n    const oldIndex = d（之前）.index;\n    此时 oldIndex === 3; // 之前节点为 abcd，所以d.index === 3\n    比较 oldIndex 与 lastPlacedIndex;\n    oldIndex 3 > lastPlacedIndex 0\n    则 lastPlacedIndex = 3;\n    d节点位置不变\n\n    继续遍历剩余newChildren\n\n    // 当前oldFiber：abc\n    // 当前newChildren abc\n\n    key === a 在 oldFiber中存在\n    const oldIndex = a（之前）.index; // 之前节点为 abcd，所以a.index === 0\n    此时 oldIndex === 0;\n    比较 oldIndex 与 lastPlacedIndex;\n    oldIndex 0 < lastPlacedIndex 3\n    则 a节点需要向右移动\n\n    继续遍历剩余newChildren\n\n    // 当前oldFiber：bc\n    // 当前newChildren bc\n\n    key === b 在 oldFiber中存在\n    const oldIndex = b（之前）.index; // 之前节点为 abcd，所以b.index === 1\n    此时 oldIndex === 1;\n    比较 oldIndex 与 lastPlacedIndex;\n    oldIndex 1 < lastPlacedIndex 3\n    则 b节点需要向右移动\n\n    继续遍历剩余newChildren\n\n    // 当前oldFiber：c\n    // 当前newChildren c\n\n    key === c 在 oldFiber中存在\n    const oldIndex = c（之前）.index; // 之前节点为 abcd，所以c.index === 2\n    此时 oldIndex === 2;\n    比较 oldIndex 与 lastPlacedIndex;\n    oldIndex 2 < lastPlacedIndex 3\n    则 c节点需要向右移动\n\n    ===第二轮遍历结束===\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br"),e("span",{staticClass:"line-number"},[n._v("51")]),e("br"),e("span",{staticClass:"line-number"},[n._v("52")]),e("br"),e("span",{staticClass:"line-number"},[n._v("53")]),e("br"),e("span",{staticClass:"line-number"},[n._v("54")]),e("br"),e("span",{staticClass:"line-number"},[n._v("55")]),e("br"),e("span",{staticClass:"line-number"},[n._v("56")]),e("br"),e("span",{staticClass:"line-number"},[n._v("57")]),e("br"),e("span",{staticClass:"line-number"},[n._v("58")]),e("br"),e("span",{staticClass:"line-number"},[n._v("59")]),e("br"),e("span",{staticClass:"line-number"},[n._v("60")]),e("br"),e("span",{staticClass:"line-number"},[n._v("61")]),e("br"),e("span",{staticClass:"line-number"},[n._v("62")]),e("br"),e("span",{staticClass:"line-number"},[n._v("63")]),e("br"),e("span",{staticClass:"line-number"},[n._v("64")]),e("br"),e("span",{staticClass:"line-number"},[n._v("65")]),e("br"),e("span",{staticClass:"line-number"},[n._v("66")]),e("br"),e("span",{staticClass:"line-number"},[n._v("67")]),e("br")])]),e("p",[n._v("可以看到，我们以为从 abcd 变为 dabc，只需要将d移动到前面。")]),n._v(" "),e("p",[n._v("但实际上React保持d不变，将abc分别移动到了d的后面。")]),n._v(" "),e("p",[n._v("从这点可以看出，考虑性能，我们要尽量减少将节点从后面移动到前面的操作。")])])}),[],!1,null,null,null);s.default=l.exports}}]);