(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{579:function(s,n,a){"use strict";a.r(n);var t=a(4),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"_1-为什么要提到优化react代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-为什么要提到优化react代码"}},[s._v("#")]),s._v(" 1 为什么要提到优化react代码?")]),s._v(" "),a("p",[s._v("因为接收了一个老项目 很多人都写过代码的那种项目，你们懂的其中的辛酸。")]),s._v(" "),a("h2",{attrs:{id:"_2-优化的内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-优化的内容"}},[s._v("#")]),s._v(" 2 优化的内容")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[s._v("- 大量的 props\n- props 的不兼容性\n- props 复制为 state\n- 返回 JSX 的函数\n- state 的多个状态\n- useState 过多\n- 复杂的 useEffect\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("大量的 props")])]),s._v(" "),a("p",[s._v("如果需要把大量的 props 传递到一个组件中，那么很有可能 该组件可再进一步拆分。")]),s._v(" "),a("p",[s._v("问题来了，“大量” 具体是多少呢？答案是 看情况。")]),s._v(" "),a("p",[s._v("假设你正在开发 一个包含 20 个或更多 props 的组件时，你想再添加一些 props 完善其他功能，这时有两点可以参考 是否应拆分组件：\n该组件是否做了多件事？")]),s._v(" "),a("p",[s._v("像函数一样，一个组件应该只做好一件事，所以考虑下 将组件拆分成多个小组件是否会更好。")]),s._v(" "),a("p",[s._v("例如，该组件存在 props 的不兼容性 或 返回 JSX 的函数。")]),s._v(" "),a("h3",{attrs:{id:"该组件是否可被合成？"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#该组件是否可被合成？"}},[s._v("#")]),s._v(" 该组件是否可被合成？")]),s._v(" "),a("p",[s._v("开发中，组合是一种很好的模式但经常被忽视。")]),s._v(" "),a("p",[s._v("如果你的组件中存在将不相干逻辑塞到一起的情况，是时候考虑使用组合了。")]),s._v(" "),a("p",[s._v("假设我们有一个表单组件来处理某组织的用户信息:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<ApplicationForm\n  user={userData}\n  organization={organizationData}\n  categories={categoriesData}\n  locations={locationsData}\n  onSubmit={handleSubmit}\n  onCancel={handleCancel}\n  ...\n/>\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("通过该组件的 props ，我们可看到它们都与组件提供的功能密切相关。")]),s._v(" "),a("p",[s._v("该组件看起来并无大碍，但如果将其中的一些 props 分担到子组件，那么数据流就会更清晰。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("<ApplicationForm onSubmit={handleSubmit} onCancel={handleCancel}>\n  <ApplicationUserForm user={userData} />\n  <ApplicationOrganizationForm organization={organizationData} />\n  <ApplicationCategoryForm categories={categoriesData} />\n  <ApplicationLocationsForm locations={locationsData} />\n</ApplicationForm>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("现在，我们已经看到该表单组件只处理提交和取消动作，其他范围内的事情，都交给了对应的子组件。")]),s._v(" "),a("h3",{attrs:{id:"是否传递了很多有关配置的-props"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#是否传递了很多有关配置的-props"}},[s._v("#")]),s._v(" 是否传递了很多有关配置的 props")]),s._v(" "),a("p",[s._v("在某些情况下，将多个有关配置的 props 组合成一个 options 是个不错的实践。")]),s._v(" "),a("p",[s._v("假设我们有一个可显示某种表格的组件：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<Grid\n  data={gridData}\n  pagination={false}\n  autoSize={true}\n  enableSort={true}\n  sortOrder="desc"\n  disableSelection={true}\n  infiniteScroll={true}\n  ...\n/>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("我们可以很清楚地看出，该组件除了 data 外其余的 props 都是与配置有关的。")]),s._v(" "),a("p",[s._v("如果将多个配置 props 合成为一个 options ，就可更好地控制组件的选项，规范性也得到提升。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const options = {\n  pagination: false,\n  autoSize: true,\n  enableSort: true,\n  sortOrder: 'desc',\n  disableSelection: true,\n  infiniteScroll: true,\n  ...\n}\n\n<Grid\n  data={gridData}\n  options={options}\n/>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("props 的不兼容性")])]),s._v(" "),a("p",[s._v("避免组件之间传递不兼容的 props。")]),s._v(" "),a("p",[s._v("假设你的组件库中有一个 "),a("Input"),s._v(" 组件，而该组件开始时仅用于处理文本，但过了一段时间后，你将它用于电话号码处理。")],1),s._v(" "),a("p",[s._v("你的实现可能如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Input({ value, isPhoneNumberInput, autoCapitalize }) {\n  if (autoCapitalize) capitalize(value)\n\n  return <input value={value} type={isPhoneNumberInput ? 'tel' : 'text'} />\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("问题在于，isPhoneNumberInput 与 autoCapitalize 之间并不存在关联，将一个手机号首字母大写是没有任何意义的。")]),s._v(" "),a("p",[s._v("在这种情况下，我们可以将其分割成多个小组件，来明确具体的职责，如果有共享逻辑，可以将其放到 hooks 中。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('function TextInput({ value, autoCapitalize }) {\n  if (autoCapitalize) capitalize(value)\n  useSharedInputLogic()\n\n  return <input value={value} type="text" />\n}\n\nfunction PhoneNumberInput({ value }) {\n  useSharedInputLogic()\n\n  return <input value={value} type="tel" />\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("虽然上面例子有点勉强，可当发现组件的props存在不兼容性时，是时候考虑拆分组件了。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("props 复制为 state")])]),s._v(" "),a("p",[s._v("如何更好地将 props 作为 state 的初始值。")]),s._v(" "),a("p",[s._v("有如下组件：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Button({ text }) {\n  const [buttonText] = useState(text)\n\n  return <button>{buttonText}</button>\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("该组件将 text 作为 useState 的初始值，可能会导致意想不到的行为。")]),s._v(" "),a("p",[s._v("实际上该组件已经关掉了 props 的更新通知，如果 text 在上层被更新，它将仍呈现 接受到 text 的第一次值，这更容易使组件出错。")]),s._v(" "),a("p",[s._v("一个更实际场景是，我们想基于 props 通过大量计算来得到新的 state。")]),s._v(" "),a("p",[s._v("在下面的例子中，slowlyFormatText 函数用于格式化 text，注意 需要很长时间才能完成。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Button({ text }) {\n  const [formattedText] = useState(() => slowlyFormatText(text))\n\n  return <button>{formattedText}</button>\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("解决此问题 最好的方案是 使用 useMemo 代替 useState。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Button({ text }) {\n  const formattedText = useMemo(() => slowlyFormatText(text), [text])\n\n  return <button>{formattedText}</button>\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("现在 slowFormatFormat 仅在 text 更改时运行，并且没有阻断 上层组件更新。")]),s._v(" "),a("p",[s._v("进一步阅读：Writing resilient components by Dan Abramov。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("返回 JSX 的函数")])]),s._v(" "),a("p",[s._v("不要从组件内部的函数中返回 JSX。")]),s._v(" "),a("p",[s._v("这种模式虽然很少出现，但我还是时不时碰到。")]),s._v(" "),a("p",[s._v("仅举一个例子来说明:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Component() {\n  const topSection = () => {\n    return (\n      <header>\n        <h1>Component header</h1>\n      </header>\n    )\n  }\n\n  const middleSection = () => {\n    return (\n      <main>\n        <p>Some text</p>\n      </main>\n    )\n  }\n\n  const bottomSection = () => {\n    return (\n      <footer>\n        <p>Some footer text</p>\n      </footer>\n    )\n  }\n\n  return (\n    <div>\n      {topSection()}\n      {middleSection()}\n      {bottomSection()}\n    </div>\n  )\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br")])]),a("p",[s._v("该例子虽然看起来没什么问题，但其实这会破坏代码的整体性，使维护变得困难。")]),s._v(" "),a("p",[s._v("要么把函数返回的 JSX 直接内联到组件内，要么将其拆分成一个组件。")]),s._v(" "),a("p",[s._v("有一点需要注意，如果你创建了一个新组件，不必将其移动到新文件中的。")]),s._v(" "),a("p",[s._v("如果多个组件紧密耦合，将它们保存在同一个文件中是有意义的。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("state 的多个状态")])]),s._v(" "),a("p",[s._v("避免使用多个布尔值来表示组件状态。")]),s._v(" "),a("p",[s._v("当编写一个组件并多次迭代后，很容易出现这样一种情况，即内部有多个布尔值来表示 该组件处于哪种状态。")]),s._v(" "),a("p",[s._v("比如下面的例子：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Component() {\n  const [isLoading, setIsLoading] = useState(false)\n  const [isFinished, setIsFinished] = useState(false)\n  const [hasError, setHasError] = useState(false)\n\n  const fetchSomething = () => {\n    setIsLoading(true)\n\n    fetch(url)\n      .then(() => {\n        setIsLoading(false)\n        setIsFinished(true)\n      })\n      .catch(() => {\n        setHasError(true)\n      })\n  }\n\n  if (isLoading) return <Loader />\n  if (hasError) return <Error />\n  if (isFinished) return <Success />\n\n  return <button onClick={fetchSomething} />\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("p",[s._v("当按钮被点击时，我们将 isLoading 设置为 true，并通过 fetch 执行网络请求。")]),s._v(" "),a("p",[s._v("如果请求成功，我们将 isLoading 设置为 false，isFinished 设置为 true，如果有错误，将 hasError 设置为 true。")]),s._v(" "),a("p",[s._v("虽然这在技术上是可行的，但很难推断出组件处于什么状态，而且不容易维护。")]),s._v(" "),a("p",[s._v("并且有可能最终处于“不可能的状态”，比如我们不小心同时将 isLoading 和 isFinished 设置为 true。")]),s._v(" "),a("p",[s._v("解决此问题一劳永逸的方案是 使用枚举来管理状态。")]),s._v(" "),a("p",[s._v("在其他语言中，枚举是一种定义变量的方式，该变量只允许设置为预定义的常量值集合，虽然在JavaScript 中不存在枚举，但我们可以使用字符串作为枚举：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Component() {\n  const [state, setState] = useState('idle')\n\n  const fetchSomething = () => {\n    setState('loading')\n\n    fetch(url)\n      .then(() => {\n        setState('finished')\n      })\n      .catch(() => {\n        setState('error')\n      })\n  }\n\n  if (state === 'loading') return <Loader />\n  if (state === 'error') return <Error />\n  if (state === 'finished') return <Success />\n\n  return <button onClick={fetchSomething} />\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("p",[s._v("通过这种方式，完全杜绝了出现 不可能状态的情况，并更利用扩展。")]),s._v(" "),a("p",[s._v("如果你使用 TypeScript 开发的话，则可以从定义时就实现枚举：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("const [state, setState] = useState<'idle' | 'loading' | 'error' | 'finished'>('idle')\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("useState 过多")])]),s._v(" "),a("p",[s._v("避免在同一个组件中使用太多的 useState。")]),s._v(" "),a("p",[s._v("一个包含许多 useState 的组件可能会做多件事情，可以考虑是否要拆分它。")]),s._v(" "),a("p",[s._v("当然也存在一些复杂的场景，我们需要在组件中管理一些复杂的状态。")]),s._v(" "),a("p",[s._v("下面是自动输入组件的例子：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function AutocompleteInput() {\n  const [isOpen, setIsOpen] = useState(false)\n  const [inputValue, setInputValue] = useState('')\n  const [items, setItems] = useState([])\n  const [selectedItem, setSelectedItem] = useState(null)\n  const [activeIndex, setActiveIndex] = useState(-1)\n\n  const reset = () => {\n    setIsOpen(false)\n    setInputValue('')\n    setItems([])\n    setSelectedItem(null)\n    setActiveIndex(-1)\n  }\n\n  const selectItem = (item) => {\n    setIsOpen(false)\n    setInputValue(item.name)\n    setSelectedItem(item)\n  }\n\n  ...\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("p",[s._v("我们有一个 reset 函数，可以重置所有状态，还有一个 selectItem 函数，可更新一些状态。")]),s._v(" "),a("p",[s._v("这些函数都离不开 useState 定义的状态。如果功能继续迭代，那么函数就会越来越多，状态也会随之增加，数据流就会变得模糊不清。")]),s._v(" "),a("p",[s._v("在这种情况下，使用 useReducer 来代替 过多的 useState 是一个不错的选择。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('const initialState = {\n  isOpen: false,\n  inputValue: "",\n  items: [],\n  selectedItem: null,\n  activeIndex: -1\n}\nfunction reducer(state, action) {\n  switch (action.type) {\n    case "reset":\n      return {\n        ...initialState\n      }\n    case "selectItem":\n      return {\n        ...state,\n        isOpen: false,\n        inputValue: action.payload.name,\n        selectedItem: action.payload\n      }\n    default:\n      throw Error()\n  }\n}\n\nfunction AutocompleteInput() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const reset = () => {\n    dispatch({ type: \'reset\' })\n  }\n\n  const selectItem = (item) => {\n    dispatch({ type: \'selectItem\', payload: item })\n  }\n\n  ...\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br")])]),a("p",[s._v("通过使用 reducer，我们封装了管理状态的逻辑，并将复杂的逻辑移出了组件，这使得组件更容易维护。")]),s._v(" "),a("p",[s._v("进一步阅读：state reducer pattern by Kent C. Dodds。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",[s._v("复杂的 useEffect")])]),s._v(" "),a("p",[s._v("避免在 useEffect 中做太多事情，它们使代码易于出错，并且难以推理。")]),s._v(" "),a("p",[s._v("下面的例子中 犯了一个很大的错误：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Post({ id, unlisted }) {\n  ...\n\n  useEffect(() => {\n    fetch(`/posts/${id}`).then(/* do something */)\n\n    setVisibility(unlisted)\n  }, [id, unlisted])\n\n  ...\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("当 unlisted 改变时，即使 id 没有变，也会调用 fetch。")]),s._v(" "),a("p",[s._v("正确的写法应该是 将多个依赖分离：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function Post({ id, unlisted }) {\n  ...\n\n  useEffect(() => { // when id changes fetch the post\n    fetch(`/posts/${id}`).then(/* ... */)\n  }, [id])\n\n  useEffect(() => { // when unlisted changes update visibility\n    setVisibility(unlisted)\n  }, [unlisted])\n\n  ...\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("p",[s._v("如有错误欢迎指出")])])}),[],!1,null,null,null);n.default=e.exports}}]);